{"version":3,"sources":["Components/Card.jsx","Components/CardList.jsx","Components/SearchBox.jsx","Components/Scroll.jsx","Components/ErrorBoundry.jsx","Components/App.jsx","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","index","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"0OAeeA,EAbF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAExB,OACI,yBAAKC,UAAU,uDACX,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,6BACI,4BAAKF,GACL,2BAAIC,MCYLK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,6BACG,IACAA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLR,GAAIK,EAAOG,GAAOR,GAClBF,KAAMO,EAAOG,GAAOV,KACpBC,MAAOM,EAAOG,GAAOT,aCHlBW,EARG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,yBAAKX,UAAU,OACb,2BAAOA,UAAU,mCAAmCY,KAAK,SAASC,YAAY,eAAeC,SAAUH,MCW9FI,EATA,SAACC,GAEZ,OACI,yBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCUJC,E,kDAlBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,8DAMDC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAIxB,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAKX,MAAMK,a,GAfGQ,aCkDZC,G,wDA3Cb,aAAe,IAAD,8BACZ,gBAgBFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAhB1C,EAAKX,MAAQ,CACXnB,OAAQ,GACRM,YAAa,IAJH,E,gEAQI,IAAD,OACdyB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACH,EAAKX,SAAS,CAACxB,OAAOmC,S,+BAQlB,IAAD,EACuBZ,KAAKJ,MAA5BnB,EADA,EACAA,OAAQM,EADR,EACQA,YACT8B,EAAepC,EAAOqC,QAAO,SAACC,GAClC,OAAOA,EAAM7C,KACV8C,cACAC,SAASlC,EAAYiC,kBAE1B,OAAQvC,EAAOyC,OAEb,yBAAK7C,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAC9B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAU3B,OAAQoC,OAPN,2C,GA5BVX,cCAlBiB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.db7191fc.chunk.js","sourcesContent":["import React from 'react';\r\n//destructuring props\r\nconst Card = ({name, email, id}) =>{\r\n    \r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa2 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"../Components/Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      {robots.map((user, index) => {\r\n        return (\r\n          <Card\r\n            key={index}\r\n            id={robots[index].id}\r\n            name={robots[index].name}\r\n            email={robots[index].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n  return (\r\n    <div className=\"pa3\">\r\n      <input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"search robot\" onChange={searchChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react'\r\n/*\r\n*props\r\n*state\r\n*child\r\n\r\n*/ \r\nconst Scroll = (props) => {\r\n    \r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n  componentDidCatch(error, info){\r\n      this.setState({hasError:true}); \r\n  }\r\n\r\n  render() {\r\n      if(this.state.hasError){\r\n          return <h1>Ooooops. Thas is not good</h1>\r\n      }\r\n      return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport Scroll from \"./Scroll\";\r\nimport ErrorBoundry from \"./ErrorBoundry\";\r\n\r\nimport '../Components/App.css'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\ncomponentDidMount(){\r\n     fetch('https://jsonplaceholder.typicode.com/users')\r\n     .then(response => response.json())\r\n     .then(users => {\r\n        this.setState({robots:users});\r\n     })\r\n    \r\n}\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n  };\r\n  render() {\r\n    const {robots, searchField} = this.state;  \r\n    const filterRobots = robots.filter((robot) => {\r\n      return robot.name\r\n        .toLowerCase()\r\n        .includes(searchField.toLowerCase());\r\n    });\r\n    return !robots.length ? <h1>Loading</h1> :\r\n    (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f2\">RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n            <ErrorBoundry>\r\n                <CardList robots={filterRobots} />\r\n            </ErrorBoundry>\r\n        </Scroll>    \r\n      </div>\r\n    );\r\n    }\r\n  }\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './Components/App';\n//import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}